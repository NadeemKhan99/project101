[{"/home/nadeem/Desktop/react_apps/docforyou/src/index.js":"1","/home/nadeem/Desktop/react_apps/docforyou/src/reportWebVitals.js":"2","/home/nadeem/Desktop/react_apps/docforyou/src/App.js":"3","/home/nadeem/Desktop/react_apps/docforyou/src/components/navbar.js":"4","/home/nadeem/Desktop/react_apps/docforyou/src/components/route.js":"5","/home/nadeem/Desktop/react_apps/docforyou/src/components/contact.js":"6","/home/nadeem/Desktop/react_apps/docforyou/src/components/home.js":"7","/home/nadeem/Desktop/react_apps/docforyou/src/components/about.js":"8","/home/nadeem/Desktop/react_apps/docforyou/src/components/hospital.js":"9","/home/nadeem/Desktop/react_apps/docforyou/src/components/doctor.js":"10","/home/nadeem/Desktop/react_apps/docforyou/src/components/lab.js":"11","/home/nadeem/Desktop/react_apps/docforyou/src/components/signin.js":"12","/home/nadeem/Desktop/react_apps/docforyou/src/apis/doc_check.js":"13","/home/nadeem/Desktop/react_apps/docforyou/src/components/signup.js":"14","/home/nadeem/Desktop/react_apps/docforyou/src/components/doctors/doc_signin.js":"15","/home/nadeem/Desktop/react_apps/docforyou/src/components/doctors/doc_signup.js":"16","/home/nadeem/Desktop/react_apps/docforyou/src/components/doctors/appp.js":"17","/home/nadeem/Desktop/react_apps/docforyou/src/components/sliders.js":"18","/home/nadeem/Desktop/react_apps/docforyou/src/components/search.js":"19"},{"size":500,"mtime":1610723049523,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1610719022034,"results":"22","hashOfConfig":"21"},{"size":147,"mtime":1610729098002,"results":"23","hashOfConfig":"21"},{"size":2211,"mtime":1612941269586,"results":"24","hashOfConfig":"21"},{"size":1256,"mtime":1611591979845,"results":"25","hashOfConfig":"21"},{"size":159,"mtime":1610729358761,"results":"26","hashOfConfig":"21"},{"size":219,"mtime":1612935326198,"results":"27","hashOfConfig":"21"},{"size":153,"mtime":1610729373706,"results":"28","hashOfConfig":"21"},{"size":162,"mtime":1610729399102,"results":"29","hashOfConfig":"21"},{"size":187,"mtime":1611589793374,"results":"30","hashOfConfig":"21"},{"size":148,"mtime":1610729471783,"results":"31","hashOfConfig":"21"},{"size":3247,"mtime":1612934565795,"results":"32","hashOfConfig":"21"},{"size":0,"mtime":1611396316881,"results":"33","hashOfConfig":"21"},{"size":6076,"mtime":1613019305342,"results":"34","hashOfConfig":"21"},{"size":3254,"mtime":1611592017697,"results":"35","hashOfConfig":"21"},{"size":9500,"mtime":1611601954672,"results":"36","hashOfConfig":"21"},{"size":5360,"mtime":1611602357254,"results":"37","hashOfConfig":"21"},{"size":2646,"mtime":1612858351193,"results":"38","hashOfConfig":"21"},{"size":3237,"mtime":1613021036061,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1qfgzso",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nadeem/Desktop/react_apps/docforyou/src/index.js",[],["82","83"],"/home/nadeem/Desktop/react_apps/docforyou/src/reportWebVitals.js",[],"/home/nadeem/Desktop/react_apps/docforyou/src/App.js",[],"/home/nadeem/Desktop/react_apps/docforyou/src/components/navbar.js",["84"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction Navbar() {\n    return (\n        <div>\n            <nav className=\"navbar sticky-top navbar-expand-lg navi\">\n                <div className=\"container\">\n                    <a className=\"navbar-brand brandi\" href=\"#\">docForY</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link linkii\" to=\"/\">Home</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link linkii\" to=\"/about\">About us</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link linkii\" to=\"/hospital\">Hospitals</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link linkii\" to=\"/lab\">Labs</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link linkii\" to=\"/doctor\">Doctors</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link linkii\" to=\"/contact\">Contact us</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link linkii\" to=\"/login\">Sign in</Link>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n\n        </div>\n    );\n}\n\nexport default Navbar;\n","/home/nadeem/Desktop/react_apps/docforyou/src/components/route.js",[],"/home/nadeem/Desktop/react_apps/docforyou/src/components/contact.js",[],"/home/nadeem/Desktop/react_apps/docforyou/src/components/home.js",[],"/home/nadeem/Desktop/react_apps/docforyou/src/components/about.js",[],"/home/nadeem/Desktop/react_apps/docforyou/src/components/hospital.js",[],"/home/nadeem/Desktop/react_apps/docforyou/src/components/doctor.js",[],"/home/nadeem/Desktop/react_apps/docforyou/src/components/lab.js",[],"/home/nadeem/Desktop/react_apps/docforyou/src/components/signin.js",[],"/home/nadeem/Desktop/react_apps/docforyou/src/apis/doc_check.js",[],"/home/nadeem/Desktop/react_apps/docforyou/src/components/signup.js",[],"/home/nadeem/Desktop/react_apps/docforyou/src/components/doctors/doc_signin.js",[],"/home/nadeem/Desktop/react_apps/docforyou/src/components/doctors/doc_signup.js",["85","86"],"import React, { Fragment } from 'react'\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport \"./../../index.css\"\nimport axios from 'axios';\nimport Appp from './appp'\n\nfunction DocSignup() {\n\n    const formik = useFormik({\n        initialValues: {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            city: \"\",\n            phone: \"\",\n            address: \"\",\n            user: \"doctor\",\n            clinic: \"\",\n            experience: \"\",\n            fees: \"\",\n            speciality: \"\",\n            qualification: \"\",\n            mon_shifts: \"\",\n            mon_shifts_array: []\n        },\n        onSubmit: (values) => {\n            var headers = {\n                \"Content-Type\": \"application/json;charset=UTF-8\",\n            }\n\n\n\n            axios.post(\n                'http://localhost/back_end/go.php', values, headers\n            ).then(\n                res => {\n                    console.log(res.data)\n                }\n            );\n\n        },\n        validationSchema: yup.object({\n            name: yup.string().matches(\"^[a-zA-Z ]{1,}[^0-9]$\", \"Invalid name, only use text\").required(\"This field is required!\"),\n            email: yup.string().email(\"Invalid Email\").required(\"This field is required!\"),\n            password: yup.string().min(6, \"Must be greater than 5 digits\").max(10, \"Must be less than 11 digits\").required(\"This field is required!\"),\n            city: yup.string().matches(\"^[a-zA-Z]{3,}$\", \"Only use text must be greater than 3 words\").required(\"This field is required!\"),\n            phone: yup.string().matches(\"^[1-9]{1}[0-9]{9}$\", \"Start number with 1-9 and must 10 digit long\").required(\"This field is required!\"),\n            address: yup.string().required(\"This field is required!\"),\n            clinic: yup.string().matches(\"^[a-zA-Z ]{1,}\", \"Only use alphabets and space!\").required(\"This field is required!\"),\n            fees: yup.number().min(0, \"Too short\").max(10000, \"Too long\").required(\"This field is required!\"),\n            experience: yup.number().max(60, \"Too long\").required(\"This field is required!\"),\n            speciality: yup.string().matches(\"^[a-zA-Z, ]*[a-zA-Z]$\", \"Only use space, comma, text\").required(\"This field is required!\"),\n            qualification: yup.string().matches(\"^[a-zA-Z, ]*[a-zA-Z]$\", \"Only use space, comma, text\").required(\"This field is required!\"),\n            shifts: yup.number(\"Must be number!\").min(0, \"Too short\").max(3, \"Too long\").required(\"This field is required!\")\n\n        })\n    })\n\n\n    // const submithandler = (event) =>{\n    //         event.preventDefault();\n    //         console.log(first)\n    //         console.log(second)\n\n\n    //     var headers = {\n    //         \"Content-Type\": \"application/json;charset=UTF-8\",\n    //     }\n\n\n\n    //     axios.post(\n    //         'http://localhost/back_end/connection.php',{id:1,namee:\"nadeem\"}, headers\n    //     ).then(\n    //         res =>{\n    //             console.log(res.data.id)\n    //         }\n    //     );\n\n\n\n    // }\n\n    const onChangeTickets = (e) =>{\n        const tickets = [formik.values.tickets];\n        const numberOfTickets = e.target.value || 0;\n    \n        tickets.splice(0, tickets.length)\n        for (let i = 0; i < numberOfTickets; i++) {\n            tickets.push({ start: '', end: '' });\n        }\n    \n        formik.values.tickets = tickets\n    \n        console.log(formik.values.tickets)\n        formik.values.mon_shifts.onChange(e)\n    }\n\n\n\n    return (\n        <div className=\"doctor_form\">\n            <form onSubmit={formik.handleSubmit}>\n                <h3>Register</h3>\n                <input type=\"text\" className=\"visually-hidden\" value={formik.values.user} onChange={formik.handleChange} id=\"user\" />\n                <div className=\"mb-2 p-2\">\n                    <label htmlFor=\"name\" className=\"form-label\">Name</label>\n                    <input type=\"text\" className=\"form-control\" values={formik.values.name} onChange={formik.handleChange} autoFocus id=\"name\" placeholder=\"Enter name\" />\n                    {formik.errors.name ? <div className=\"error\">{formik.errors.name}</div> : \"\"}\n                </div>\n\n                <div className=\"mb-2 p-2\">\n                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\n                    <input type=\"email\" className=\"form-control\" values={formik.values.email} onChange={formik.handleChange} id=\"email\" placeholder=\"Enter email\" />\n                    {formik.errors.email ? <div className=\"error\">{formik.errors.email}</div> : \"\"}\n                </div>\n\n                <div className=\"mb-2 p-2\">\n                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\n                    <input type=\"password\" className=\"form-control\" values={formik.values.password} onChange={formik.handleChange} id=\"password\" placeholder=\"Enter password\" />\n                    {formik.errors.password ? <div className=\"error\">{formik.errors.password}</div> : \"\"}\n                </div>\n\n                <div className=\"mb-2 p-2\">\n                    <label htmlFor=\"city\" className=\"form-label\">City</label>\n                    <input type=\"text\" className=\"form-control\" values={formik.values.city} onChange={formik.handleChange} id=\"city\" placeholder=\"Enter city name\" />\n                    {formik.errors.city ? <div className=\"error\">{formik.errors.city}</div> : \"\"}\n                </div>\n\n                <div className=\"mb-2 p-2\">\n                    <label htmlFor=\"phone\" className=\"form-label\">Cell #</label>\n                    <input type=\"text\" className=\"form-control\" values={formik.values.phone} onChange={formik.handleChange} id=\"phone\" placeholder=\"+92 xxxxxxxxxx\" />\n                    {formik.errors.phone ? <div className=\"error\">{formik.errors.phone}</div> : \"\"}\n                </div>\n\n                <div className=\"mb-2 p-2\">\n                    <label htmlFor=\"address\" className=\"form-label\">Address</label>\n                    <input type=\"text\" className=\"form-control\" values={formik.values.address} onChange={formik.handleChange} id=\"address\" placeholder=\"Enter Address\" />\n                    {formik.errors.address ? <div className=\"error\">{formik.errors.address}</div> : \"\"}\n                </div>\n\n                <div className=\"mb-2 p-2\">\n                    <label htmlFor=\"clinic\" className=\"form-label\">Clinic Name</label>\n                    <input type=\"text\" className=\"form-control\" values={formik.values.clinic} onChange={formik.handleChange} id=\"clinic\" placeholder=\"Enter clinic name\" />\n                    {formik.errors.clinic ? <div className=\"error\">{formik.errors.clinic}</div> : \"\"}\n                </div>\n\n                <div className=\"mb-2 p-2\">\n                    <label htmlFor=\"experience\" className=\"form-label\">Experience</label>\n                    <input type=\"number\" className=\"form-control\" values={formik.values.experience} onChange={formik.handleChange} id=\"experience\" placeholder=\"Enter experience in Years\" />\n                    {formik.errors.experience ? <div className=\"error\">{formik.errors.experience}</div> : \"\"}\n                </div>\n\n                <div className=\"mb-2 p-2\">\n                    <label htmlFor=\"fees\" className=\"form-label\">Fees</label>\n                    <input type=\"number\" className=\"form-control\" values={formik.values.fees} onChange={formik.handleChange} id=\"fees\" placeholder=\"Enter fees in rupees\" />\n                    {formik.errors.fees ? <div className=\"error\">{formik.errors.fees}</div> : \"\"}\n                </div>\n\n                <div className=\"mb-2 p-2\">\n                    <label htmlFor=\"speciality\" className=\"form-label\">Speciality</label>\n                    <input type=\"text\" className=\"form-control\" values={formik.values.speciality} onChange={formik.handleChange} id=\"speciality\" placeholder=\"gynalogist,orthologist,brain tumor\" />\n                    {formik.errors.speciality ? <div className=\"error\">{formik.errors.speciality}</div> : \"\"}\n                </div>\n\n                <div className=\"mb-2 p-2\">\n                    <label htmlFor=\"qualification\" className=\"form-label\">Qualification</label>\n                    <input type=\"text\" className=\"form-control\" values={formik.values.qualification} onChange={formik.handleChange} id=\"qualification\" placeholder=\"MBBS,MBA,CSS\" />\n                    {formik.errors.qualification ? <div className=\"error\">{formik.errors.qualification}</div> : \"\"}\n                </div>\n\n                <Appp/>\n{/* \n                <div className=\"container\">\n                    <div className=\"row justify-content-md-center\">\n                        <div className=\"col col-lg-4 col-sm-10\">\n                            <h4>Monday</h4>\n                        </div>\n                        <div className=\"col col-lg-8\">\n                            <input type=\"number\" className=\"form-control\" values={formik.values.mon_shifts} onChange={e => onChangeTickets(e)} id=\"mon_shifts\" placeholder=\"Enter # of shifts per data less than 4\" />\n                            {formik.errors.mon_shifts ? <div className=\"error\">{formik.errors.mon_shifts}</div> : \"\"}\n                        </div>\n                    </div>\n                \n\n                </div> */}\n\n                <div className=\"mb-6 p-2 register_button\">\n                    <button type=\"submit\" className=\"btn btn-success\">Register</button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default DocSignup;","/home/nadeem/Desktop/react_apps/docforyou/src/components/doctors/appp.js",["87"],"import React from 'react';\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nfunction Appp() {\n    const initialValues = {\n        numberOfTickets: '',\n        tickets: []\n    };\n\n    // const validationSchema = Yup.object().shape({\n    //     numberOfTickets: Yup.string()\n    //         .required('Number of tickets is required'),\n    //     tickets: Yup.array().of(\n    //         Yup.object().shape({\n    //             name: Yup.string()\n    //                 .required('Name is required'),\n    //             email: Yup.string()\n    //                 .email('Email is invalid')\n    //                 .required('Email is required')\n    //         })\n    //     )\n    // });\n\n    function onChangeTickets(e, field, values, setValues) {\n        // update dynamic form\n        const tickets = [...values.tickets];\n        const numberOfTickets = e.target.value;\n        if (e.target.value !== 0) {\n            const previousNumber = parseInt(field.value);\n            if (previousNumber < numberOfTickets) {\n                for (let i = previousNumber; i < numberOfTickets; i++) {\n                    tickets.push({ name: '', email: '' });\n                }\n            } else {\n                for (let i = previousNumber; i >= numberOfTickets; i--) {\n                    tickets.splice(i, 1);\n                }\n            }\n        }\n\n        setValues({ ...values, tickets });\n\n        // call formik onChange method\n        field.onChange(e);\n    }\n\n    function onSubmit(fields) {\n        // display form field values on success\n        alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4));\n    }\n\n    return (\n        <Formik initialValues={initialValues}  onSubmit={onSubmit}>\n            {({ errors, values, touched, setValues }) => (\n                <Form>\n                    <div className=\"card m-3\">\n                        <h5 className=\"card-header\">React + Formik Dynamic Form Example</h5>\n                        <div className=\"card-body border-bottom\">\n                            <div className=\"form-row\">\n                                <div className=\"form-group\">\n                                    <label>Monday</label>\n                                    <Field name=\"numberOfTickets\">\n                                        {({ field }) => (\n                                            <select  required {...field} className={'form-control' + (errors.numberOfTickets && touched.numberOfTickets ? ' is-invalid' : '')} onChange={e => onChangeTickets(e, field, values, setValues)}>\n                                                <option value={0}></option>\n                                                {[0, 1, 2, 3].map(i =>\n                                                    <option key={i} value={i}>{i}</option>\n                                                )}\n                                            </select>\n                                        )}\n                                    </Field>\n                                    <ErrorMessage name=\"numberOfTickets\" component=\"div\" className=\"invalid-feedback\" />\n                                </div>\n                            </div>\n                        </div>\n                        <FieldArray name=\"tickets\">\n                            {() => (values.tickets.map((ticket, i) => {\n                                // const ticketErrors = errors.tickets?.length && errors.tickets[i] || {};\n                                // const ticketTouched = touched.tickets?.length && touched.tickets[i] || {};\n                                return (\n                                    <div key={i} className=\"list-group list-group-flush\">\n                                        <div className=\"list-group-item\">\n                                            <h5 className=\"card-title\">Shift {i + 1}</h5>\n                                            <div className=\"form-row\">\n                                                <div className=\"form-group col-6\">\n                                                    <label>Start</label>\n                                                    <Field name={`tickets.${i}.name`} type=\"time\" required className='form-control' />\n\n                                                </div>\n                                                <div className=\"form-group col-6\">\n                                                    <label>End</label>\n                                                    <Field name={`tickets.${i}.email`} type=\"time\" required className='form-control' />\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                );\n                            }))}\n                        </FieldArray>\n                        <div className=\"card-footer text-center border-top-0\">\n                            <button type=\"submit\" className=\"btn btn-primary mr-1\">\n                                Submit\n                            </button>\n                            <button className=\"btn btn-secondary mr-1\" type=\"reset\">Reset</button>\n                        </div>\n                    </div>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default Appp;","/home/nadeem/Desktop/react_apps/docforyou/src/components/sliders.js",[],"/home/nadeem/Desktop/react_apps/docforyou/src/components/search.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":9,"column":21,"nodeType":"94","endLine":9,"endColumn":65},{"ruleId":"95","severity":1,"message":"96","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"99","line":85,"column":11,"nodeType":"97","messageId":"98","endLine":85,"endColumn":26},{"ruleId":"95","severity":1,"message":"100","line":3,"column":13,"nodeType":"97","messageId":"98","endLine":3,"endColumn":16},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'onChangeTickets' is assigned a value but never used.","'Yup' is defined but never used.","no-global-assign","no-unsafe-negation"]